3-1
1+2
echo 1
console.log(1)
clear
# pound symbol for comment.
help
# pound symbol for comment.
help(help)
a <- 5
b <- 3
a*b
a <- 5 b <- 3 a*b
c <- "hey"
c
d <- a
d
d <- c(1,2,3,4,5)
avg(d)
d <- c(1,2,"e",4,5)
d <- c(1,2,3,4,5)
d
e <- c(c," there")
e
e <- c(c,"there")
e
f<-seq(1 : 10)
f<-seq(1, 10)
g <- seq(1, 10, by = 2)
g
mean(1,2,3,4)
mean(g)
min(g)
max(g)
paste(e, collapse =",")
paste(e, collapse =" ")
install.packages("ggplot2")
h <- c("m", "m", "f", "f", "m", "f", "m")
qplot(h)
library(ggplot2)
qplot(h)
qplot(data = mpg, x = "hwy")
qplot(data = mpg, x = hwy)
qplot(data = mpg, x = cty)
qplot(data = mpg, x = drv, y = hwy)
qplot(data = mpg, x = drv, y = cty)
qplot(data = mpg, x = drv, y = hwy)
qplot(data = mpg, x = drv, y = hwy, geom = "line")
qplot(data = mpg, x = drv, y = hwy, geom = "dot")
qplot(data = mpg, x = drv, y = hwy, geom = "boxplot")
qplot(data = mpg, x = drv, y = hwy, geom = "point")
qplot(data = mpg, x = drv, y = hwy, geom = "boxplot")
qplot(data = mpg, x = drv, y = hwy, geom = "boxplot")
qplot(h)
library(ggplot2)
qplot(data = mpg, x = drv, y = hwy, geom = "boxplot")
english <- c(90, 80, 85, 70, 60)
math <- c(80, 70, 90, 90, 70)
#df for data frame
df_exam <- data.frame(english, math)
df_exam
class <- c(1,2,3,2,1)
#df for data frame
df_exam <- data.frame(english, math, class)
df_exam
#df for data frame
df_exam <- data.frame(english, math)
math <- c(80, 70, 90, 90)
#df for data frame
df_exam <- data.frame(english, math)
math <- c(80, 70, 90, 90, 70)
#df for data frame
df_exam <- data.frame(english, math)
df_exam
mean(df_exam$math)
df_exam2 <- data.frame(english = c(90, 80, 85, 70, 60), math = c(80, 70, 90, 90, 70), class = c(1,2,2,1,1))
df_exam2
install.packages("radxl")
install.packages("readxl")
library(readxl)
read_excel("datamodeling.xlsx")
df_exam3 <- read_excel("datamodeling.xlsx")
df_exam3
mean(df_exam3$math)
mean(df_exam3$english)
df_exam3 <- read_excel("datamodeling.xlsx")
library(readxl)
df_exam3 <- read_excel("datamodeling.xlsx")
#같은 프로젝트 폴더 안에 저장된 데이터가 있어야 절대 경로 지정없이 사용 가능하다.
df_exam3
mean(df_exam3$english)
view(df_exam3)
View(df_exam3)
csv_exam <- read.csv("datamodeling.csv")
csv_exam
#head(), tail(), View(), dim(), str(), summary()
#str stands for structure
head(df_exam)
#head(), tail(), View(), dim(), str(), summary()
#str stands for structure
head(df_exam3)
#head(), tail(), View(), dim(), str(), summary()
#str stands for structure
head(df_exam3)
library(ggplot2)
#head(), tail(), View(), dim(), str(), summary()
#dim stands for dimension, str stands for structure
dim(df_exam3)
mpg <- as.data.frame(mpg)
View(mpg)
mpg <- as.data.frame(ggplot2::mpg)
View(mpg)
head(mpg)
tail(mpg)
head(mpg)
View(mpg)
head(mpg)
dim(mpg)
str(mpg)
summary(mpg)
mean(mpg$hwy)
install.packages("dplyr")
library(dplyr)
#rename()
df_var <- data.frame(var1 = c(1,2,1), var2 = c(2,3,2))
df_var
df_new <- rename(df_var, v2 = var2)
df_new
df_var
df_exam3
df_exam3$sum <- df_exam3$english + df_exam3$math
df_exam3
df_exam3$mean <- (df_exam3$english + df_exam3$math)/2
df_exam3
df_exam3$avg <- (df_exam3$english + df_exam3$math)/2
df_exam3
mph_new <- mpg
View(mpg_new)
mpg_new <- mpg
View(mpg_new)
mpg$total <- (mpg$cty + mpg$hwy)/2
head(mpg)
summary(mph_new$total)
summary(mpg_new$total)
head(mpg)
summary(mpg_new$total)
mpg_new$total <- (mpg$cty + mpg$hwy)/2
head(mpg_new)
summary(mpg_new$total)
hist(mpg_new&total)
summary(mpg_new$total)
hist(mpg_new&total)
head(mpg_new)
hist(mpg_new$total)
mpg_new$eval <- ifelse
mpg_new$eval <- ifelse(mpg_new$total >= 20, "Pass", "Fail")
View(mpg_new)
View(mph_new)
View(mph_new)
#빈도표
table(mpg_new$eval)
qplot(mpg_new$eval)
mpg_new$grade <- ifelse(mpg_new$total > 30, "A",
ifelse(mpg_new$total > 20, "B"), "C")
mpg_new$grade <- ifelse(mpg_new$total > 30, "A",
ifelse(mpg_new$total > 20, "B"), "C"))
mpg_new$grade <- ifelse(mpg_new$total > 30, "A",
ifelse(mpg_new$total > 20, "B"), "C")
mpg_new$grade <- ifelse(mpg_new$total > 30, "A",
ifelse(mpg_new$total > 20, "B", "C"))
View(mpg_new)
View(mph_new)
library(ggplot2)
midwest_df <- as.data.frame(ggplot2::midwest)
View(midwest_df)
(midwest_df)
str(midwest_df)
View(midwest_df)
Summary(midwest_df)
summary(midwest_df)
#head(), tail(), View(), dim(), str(), summary()
#dim stands for dimension, str stands for structure
dim(df_exam3)
#head(), tail(), View(), dim(), str(), summary()
#dim stands for dimension, str stands for structure
dim(df_exam3)
dim(midwest_df)
min(midwest_df$poptotal)
summary(midwest_df)
max(midwest_df$poptotal)
min(midwest_df$percasian)
max(midwest_df$percasian)
# 2번 문제
midwest_df <- rename(midwest_df,  poptotal= total)
midwest_df <- rename(midwest_df,  poptotal= total)
# 2번 문제
library(dplyr)
midwest_df <- rename(midwest_df,  poptotal= total)
midwest_df <- rename(midwest_df, total = poptotal)
View(midwest_df)
midwest_df <- rename(midwest_df, asian = popasian)
#3번 문제
midwest_df$asianpercent <- (midwest_df$asian / midwest_df$total)*100
View(midwest_df)
hist(midwest_df$asianpercent)
#4번 문제
asianmean <- mean(midwest_df$asianpercent)
asianmean
midwest_df$grade <- ifelse(midwest_df$asianpercent > asianmean, "large", "small")
#5번 문제
table(midwest_df$grade)
qplot(midwest_df$grade)
hist(midwest_df$asianpercent)
qplot(midwest_df$grade)
#3번 문제
midwest_df$asianpercent <- (midwest_df$asian / midwest_df$total) * 100
